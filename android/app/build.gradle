plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if(keystorePropertiesFile.exists()){
    keystoreProperties.load(newFileInputStream(keystorePropertiesFile))
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8'){
        reader->localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if(flutterVersionCode == null){
    flutterVersionCode = '5'
}
def flutterVersionName = localProperties.getProperty('flutter.versionName')
if(flutterVersionName == null){
    flutterVersionName = '1.0.24.09.03'
}





android {
    namespace "com.example.new_app"
    compileSdkVersion 34//flutter.compileSdkVersion
    ndkVersion "25.2.9519653"
    

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility =  JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.new_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        
         release {

          keyAlias keystoreProperties['keyAlias']

          keyPassword keystoreProperties['keyPassword']

          storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null

          storePassword keystoreProperties['storePassword']

     }
    }

       buildTypes {        
        buildTypes {
            release {
                signingConfig signingConfigs.release
                minifyEnabled true
                useProguard true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:33.1.2')
    // Firebase dependencies
    implementation "com.google.firebase:firebase-auth"
    implementation "com.google.android.gms:play-services-auth:20.7.0"
    implementation 'com.google.android.gms:play-services-ads:22.6.0'
    
    // Firebase Analytics
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-analytics"
}
